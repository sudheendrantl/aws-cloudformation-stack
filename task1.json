{

    "AWSTemplateFormatVersion": "2010-09-09",

    "Description": "EC2, Kinesis Data Stream, Dynamo DB, SNS, S3 and Lambda creation (v14)",

    "Parameters": {

        "ADDCodeBuildProjectName": {
            "Description": "CodeBuild Project name",
            "Type": "String",
            "Default": "addcodebuildproject"
        },

        "ADDCodeCommitRepositoryName": {
            "Description": "CodeCommit Repository name",
            "Type": "String",
            "Default": "addcoderepository"
        },

        "ADDCodeDeployAppName": {
            "Description": "CodeDeploy Application name",
            "Type": "String",
            "Default": "addapp"
        },

        "ADDCodeDeploymentGroupName": {
            "Description": "CodeDeploy Deployment Group name",
            "Type": "String",
            "Default": "adddeploymentgroup"
        },

        "ADDCodePipelineName": {
            "Description": "CodePipeline name",
            "Type": "String",
            "Default": "addpipeline"
        },

        "ADDDynamoDBTableName": {
            "Description": "Dynamo Database Table name",
            "Type": "String",
            "Default": "adddb"
        },

        "ADDEC2KeypairName": {
            "Description": "Name of EC2 key",
            "Type": "String",
            "Default": "addec2key"
        },

        "ADDKinesisDataStreamName": {
            "Description": "Kinesis DataStream name",
            "Type": "String",
            "Default": "addkinesisstream"
        },

        "ADDSNSAlertTopicName": {
            "Description": "SNS Alert Topic Name",
            "Type": "String",
            "Default": "addalerttopic"
        },

		"ADDSubscriptionEmailID":{
            "Description": "Email ID of subscriber of the Alert topic",
            "Type": "String",
            "Default": "sudheendran@hotmail.com"
		},

		"ADDS3BucketName":{
            "Description": "Name of S3 to be created for storing Anomaly Detection Source files",
            "Type": "String",
            "Default": "anomalydetections3bucket"
		},

		"AnomalyDataGeneratorS3KeyName":{
            "Description": "Name of S3 Key (ZIP file name) to be used to locate the raw data generator source file",
            "Type": "String",
            "Default": "raw_data.zip"
		},

		"ADDLambdaS3KeyName":{
            "Description": "Name of S3 Key (ZIP file name) to be used to locate the lambda handler source file",
            "Type": "String",
            "Default": "anomaly_detection.zip"
		},

		"ADDLambdaFunctionName":{
            "Description": "Name of Lambda function to create",
            "Type": "String",
            "Default": "anomalydetection"
		},

		"ADDLambdaEnvName":{
            "Description": "Runtime for the Lambda function to be created e.g Python3.11, Node.js etc)",
            "Type": "String",
            "Default": "python3.11"
		},

        "ADDEC2InstanceName": {
            "Description": "Name of the EC2 machine to be created",
            "Type": "String",
            "Default": "addserver"
        },
		
        "ADDEC2InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.micro"
        },

        "ADDEC2InstanceAMI": {
            "Description": "EC2 Instance AMI",
            "Type": "String",
            "Default": "ami-0261755bbcb8c4a84"
        },

		"ADDEC2InstanceTagName":{
            "Description": "Tag to be created for EC2",
            "Type": "String",
            "Default": "Name"
		},

        "ADDIdentifierTagName": {
            "Description": "Tag Name to be used while creating resources",
            "Type": "String",
            "Default": "Identifier"
        },

        "ADDIdentifierTagValue": {
            "Description": "Tag value to be used while creating resources",
            "Type": "String",
            "Default": "anomalydatadetector"
        },
		
		"ADDEC2AdminRoleName": {
            "Description": "Name of ec2 IAM admin role",
            "Type": "String",
            "Default": "addec2adminrole"
		},

		"ADDLambdaAdminRoleName": {
            "Description": "Name of ec2 lambda admin role",
            "Type": "String",
            "Default": "addlambdaadminrole"
		},

		"ADDCodeBuildAdminRoleName": {
            "Description": "Name of codebuild IAM admin role",
            "Type": "String",
            "Default": "addcodebuildadminrole"
		},

		"ADDCodeDeployAdminRoleName": {
            "Description": "Name of codedeploy IAM admin role",
            "Type": "String",
            "Default": "addcodedeployadminrole"
		},

		"ADDCodePipelineAdminRoleName": {
            "Description": "Name of codepipeline IAM admin role",
            "Type": "String",
            "Default": "addcodepipelineadminrole"
		}

    },

    "Resources": {

        "ADDEC2AdminRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"ManagedPolicyArns" : ["arn:aws:iam::aws:policy/AdministratorAccess"],
				"RoleName": {
					"Ref": "ADDEC2AdminRoleName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

        "ADDEC2AdminRoleInstance": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ADDEC2AdminRole"
                    }
                ],
				"InstanceProfileName" : {
					"Ref": "ADDEC2AdminRoleName"
				}
            }
        },

        "ADDLambdaAdminRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"ManagedPolicyArns" : ["arn:aws:iam::aws:policy/AdministratorAccess"],
				"RoleName": {
					"Ref": "ADDLambdaAdminRoleName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

        "ADDLambdaAdminRoleInstance": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ADDLambdaAdminRole"
                    }
                ],
				"InstanceProfileName" : {
					"Ref": "ADDLambdaAdminRoleName"
				}
            }
        },

        "ADDCodeDeployAdminRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"ManagedPolicyArns" : ["arn:aws:iam::aws:policy/AdministratorAccess"],
				"RoleName": {
					"Ref": "ADDCodeDeployAdminRoleName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

        "ADDCodeDeployAdminRoleInstance": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ADDCodeDeployAdminRole"
                    }
                ],
				"InstanceProfileName" : {
					"Ref": "ADDCodeDeployAdminRoleName"
				}
            }
        },

        "ADDCodeBuildAdminRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codebuild.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"ManagedPolicyArns" : ["arn:aws:iam::aws:policy/AdministratorAccess"],
				"RoleName": {
					"Ref": "ADDCodeBuildAdminRoleName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

        "ADDCodeBuildAdminRoleInstance": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ADDCodeBuildAdminRole"
                    }
                ],
				"InstanceProfileName" : {
					"Ref": "ADDCodeBuildAdminRoleName"
				}
            }
        },

        "ADDCodePipelineAdminRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
				"ManagedPolicyArns" : ["arn:aws:iam::aws:policy/AdministratorAccess"],
				"RoleName": {
					"Ref": "ADDCodePipelineAdminRoleName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDVPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": "10.0.0.0/16",
				"EnableDnsHostnames": "true",
				"EnableDnsSupport": "true",
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDSubnet": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "ADDVPC"
				},
				"CidrBlock": "10.0.1.0/24",
				"AvailabilityZone": "us-east-1a",
				"MapPublicIpOnLaunch": "true",
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},
		
       "ADDSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable HTTP, HTTPS, SSH, All ingress",
                "VpcId": {
                    "Ref": "ADDVPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": -1,
                        "FromPort": 0,
                        "ToPort": 0,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
            }
        },
		
		"ADDIG": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
			
		},
		
		"ADDRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {
					"Ref" : "ADDVPC"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDSubnetRouteTableAssociation" : {
		   "Type" : "AWS::EC2::SubnetRouteTableAssociation",
		   "Properties" : {
			   "SubnetId" : { 
					"Ref" : "ADDSubnet" 
				},
				"RouteTableId" : { 
					"Ref" : "ADDRouteTable" 
				}
			}
		},

		"ADDRoute" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : { 
					"Ref" : "ADDRouteTable" 
				},
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : { 
					"Ref" : "ADDIG"
				}
			}
		},

		"ADDVPCGatewayAttachment" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Properties" : {
				"InternetGatewayId" : {
					"Ref" : "ADDIG"
				},
				"VpcId" : {
					"Ref" : "ADDVPC"
				}
			}
		},

		"ADDEC2KeyPair": {
			"Type" : "AWS::EC2::KeyPair",
			"Properties" : {
				"KeyName" : {
					"Ref" : "ADDEC2KeypairName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},		

        "ADDEC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
				"IamInstanceProfile" : {
					"Ref" : "ADDEC2AdminRoleInstance"
				},
				"Tags": [
					{
						"Key" : {
							"Ref" : "ADDEC2InstanceTagName"
						},
						"Value" : {
							"Ref": "ADDEC2InstanceName"
						}
					},
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				],                
				"InstanceType": {
                    "Ref": "ADDEC2InstanceType"
                },
                "ImageId": {
                    "Ref": "ADDEC2InstanceAMI"
                },
				"KeyName" : {
					"Ref": "ADDEC2KeyPair"
				},
                "NetworkInterfaces": [
                    {
                        "GroupSet": [
                            {
                                "Ref": "ADDSecurityGroup"
                            }
                        ],
						"DeviceIndex": "0",
                        "SubnetId": {
                            "Ref": "ADDSubnet"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
								"sudo apt-get update",
								"sudo apt install python3-pip -y",
								"pip install boto3",
								"sudo apt update",
								"sudo apt install ruby-full -y",
								"sudo apt install wget",
								"cd /home/ubuntu",
								"wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install",
								"chmod +x ./install",
								"sudo ./install auto",
								"sudo service codedeploy-agent status"
                            ]
                        ]
                    }
                }
            }
        },

        "ADDDBTable" : {
  			"Type" : "AWS::DynamoDB::Table",
  			"Properties" : {
      			"AttributeDefinitions" : [
      			 	{
  						"AttributeName" : "deviceid",
  						"AttributeType" : "S"
					}, 
					{
  						"AttributeName" : "timestamp",
  						"AttributeType" : "S"
					}
      			 ],
      			"KeySchema" : [
      				{
                        "AttributeName": "deviceid",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "timestamp",
                        "KeyType": "RANGE"
                    }
                ],
      			"TableName" : {
					"Ref" : "ADDDynamoDBTableName"
				},
      			"ProvisionedThroughput": {
                    "ReadCapacityUnits": 2,
                    "WriteCapacityUnits": 2
                },
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
    		}
		},

		"ADDKinesisDatastream": {
			"Type" : "AWS::Kinesis::Stream",
			"Properties" : {
				"Name" : {
					"Ref" : "ADDKinesisDataStreamName"
				},
				"ShardCount" : 1,
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDSNSAlertTopic": {
			"Type" : "AWS::SNS::Topic",
			"Properties" : {
				"TopicName" : {
					"Ref" : "ADDSNSAlertTopicName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDSNSEmailSubscription": {
			"Type" : "AWS::SNS::Subscription",
			"Properties" : {
				"Endpoint" : {
					"Ref": "ADDSubscriptionEmailID"
				},
				"Protocol" : "email",
				"TopicArn" : {
					"Ref": "ADDSNSAlertTopic"
				}
			}
		},

		"ADDS3Bucket" : {
			"Type" : "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Ref" : "ADDS3BucketName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
            }		
		},

		"ADDCodeCommitRepository": {
			"Type" : "AWS::CodeCommit::Repository",
			"DependsOn" : "ADDS3Bucket",
			"Properties" : {
				"RepositoryName" : {
					"Ref": "ADDCodeCommitRepositoryName"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDCodeBuildProject": {
			"Type" : "AWS::CodeBuild::Project",
			"DependsOn" : "ADDCodeCommitRepository",
			"Properties" : {
				"Name" : {
					"Ref": "ADDCodeBuildProjectName"
				},
				"Source" : {
					"Type" : "CODECOMMIT",
					"Location" : {
						"Fn::GetAtt": [
							"ADDCodeCommitRepository", "CloneUrlHttp"
						]
					}
				},
				"Artifacts" : {
					"Type" : "S3",
					"Location" : {
						"Ref" : "ADDS3BucketName"
					},
					"Name": "/",
					"Path": ""
				},
				"ServiceRole": {
					"Fn::GetAtt": [
						"ADDCodeBuildAdminRole", "Arn"
					]
				},
				"Environment": {
					"ComputeType": "BUILD_GENERAL1_SMALL",
					"Image": "aws/codebuild/amazonlinux2-aarch64-standard:2.0",
					"ImagePullCredentialsType": "CODEBUILD",
					"Type": "ARM_CONTAINER"
				},
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		},

		"ADDCodeDeployApp": {
			"Type" : "AWS::CodeDeploy::Application",
			"Properties" : {
				"ApplicationName" : {
					"Ref": "ADDCodeDeployAppName"
				},
				"ComputePlatform" : "Server",
				"Tags": [
					{
						"Key": {
							"Ref": "ADDIdentifierTagName"
						},
						"Value": {
							"Ref": "ADDIdentifierTagValue"
						}
					}
				]
			}
		}
	},

	"Outputs" : 
	{
		"InstanceID" : {
			"Description" : "InstanceID of the EC2 Instance created",
			"Value" : { 
				"Ref" : "ADDEC2Instance" 
			}
		},
		"TopicARN" : {
			"Description" : "ARN of the m03p02_anomaly_alerts topic created",
			"Value" : { 
				"Ref" : "ADDSNSAlertTopic" 
				}
		}
	}
}